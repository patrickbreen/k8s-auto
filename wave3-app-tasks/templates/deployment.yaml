apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: tasks
  name: tasks
  namespace: tasks
spec:
  replicas: !!int "{{ .Values.appReplicaCount }}"
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: tasks
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9000"
        prometheus.io/scrape: "true"
      labels:
        name: tasks
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - tasks
              topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: owner.tasks-postgres.credentials.postgresql.acid.zalan.do
        image: "{{ .Values.imageRepository }}-app@{{ .Values.appImageHash }}"
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9000
          name: metrics
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/tasks/
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: tasks
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/tasks/
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      serviceAccount: tasks
      serviceAccountName: tasks
