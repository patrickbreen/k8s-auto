apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: wave3-app-tasks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wave3-app-tasks
    app.kubernetes.io/version: 0.1.0
    helm.sh/chart: wave3-app-tasks-0.1.0
  name: wave3-app-tasks-dev
  namespace: tasks
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: wave3-app-tasks-dev
      app.kubernetes.io/name: wave3-app-tasks
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: wave3-app-tasks-dev
        app.kubernetes.io/name: wave3-app-tasks
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: app-user.tasks-postgres.credentials.postgresql.acid.zalan.do
        image: "{{ .Values.imageRepository }}@{{ .Values.imageHash }}"
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/tasks/
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: wave3-app-tasks
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/tasks/
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      serviceAccount: tasks
      serviceAccountName: tasks
